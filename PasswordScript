#!/bin/bash

# Function to check the strength of a password
check_password_strength() {
    local password=$1

    # Define the minimum length for the password
    local min_length=8

    # Check the length of the password
    if [ ${#password} -lt $min_length ]; then
        echo "Weak Password: Less than $min_length characters."
        return
    fi

    # Check for the presence of numbers, uppercase, lowercase, and special characters
    if ! [[ $password =~ [0-9] ]]; then
        echo "Weak Password: Should include numbers."
        return
    fi
    if ! [[ $password =~ [A-Z] ]]; then
        echo "Weak Password: Should include uppercase letters."
        return
    fi
    if ! [[ $password =~ [a-z] ]]; then
        echo "Weak Password: Should include lowercase letters."
        return
    fi
    if ! [[ $password =~ [[:punct:]] ]]; then
        echo "Weak Password: Should include special characters."
        return
    fi

    # Calculate and print password entropy
    calculate_entropy "$password"

    echo "Strong Password."
}

# Function to calculate entropy
calculate_entropy() {
    local password=$1
    local length=${#password}
    local symbol_count=94 # Lowercase + Uppercase + Digits + Punctuation
    local entropy=$(echo "l($symbol_count) / l(2) * $length" | bc -l)
    printf "Password Entropy: %.2f bits\n" $entropy
}

# Main script starts here
echo "Password Strength Analyzer"
echo "-------------------------"
echo "Guidelines for a strong password:"
echo "- Use at least 8 characters."
echo "- Include numbers, uppercase and lowercase letters, and special characters."
echo "- Avoid common words and predictable patterns."
echo "-------------------------"
read -r -p "Enter password to check strength: " user_password
check_password_strength "$user_password"
